% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/baselearner.R
\name{mltrain}
\alias{mltrain}
\title{Train function to extend base classifiers}
\usage{
mltrain(dataset, ...)
}
\arguments{
\item{dataset}{An object of \code{mltransformation} class, that has at least
three attributes: \strong{data}, \strong{labelname} and \strong{methodname}.
The \code{data} is the dataframe with the predictive attributes and the
class column. The \code{labelname} is the name of the class column. Finally,
the \code{methodname} is the name of the implemented method.}

\item{...}{Others arguments passed to the base method.}
}
\value{
A model object. The class of this model can be of any type, however,
 this object will be passed to the respective mlpredict method.
}
\description{
To extend a base classifier, two steps are necessary:
 \enumerate{
   \item Create a train method
   \item Create a prediction method
 }
 This section is about how to create a train method.
}
\section{How to create a new base method}{

This section is about how to do this
}
\examples{
# Create a empty model of type foo
mltrain.basefoo <- function (dataset, ...) {
   mymodel <- list()
   class(mymodel) <- "foomodel"
   mymodel
}

#Use this base method with Binary Relevance
brmodel <- br(emotions, "foo")

# Create a SVM method using the e1071 package
library(e1071)
mltrain.baseSVM <- function (dataset, ...) {
   traindata <- dataset$data[, -ncol(dataset$data)]
   labeldata <- dataset$data[, dataset$labelname]
   model <- svm(traindata, labeldata, probability = TRUE, ...)
   model
}
}

