% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/br.R
\name{br}
\alias{br}
\title{Binary Relevance for multi-label Classification}
\usage{
br(mdata, base.method = "SVM", ..., specific.params = list(),
  save.datasets = FALSE, CORES = 1)
}
\arguments{
\item{mdata}{Object of class \code{\link[mldr]{mldr}}, a multi-label train
dataset (provided by \pkg{mldr} package).}

\item{base.method}{A string or a named vector with the base method(s)
  name(s). If a single value is passed the same base method will be used for
  train all subproblems. If a named vector is passed then each subproblem can
  be trained by a specific base method. When a named vector is used the size
  and the name of its elements must have exactly the number and name of the
  labels.

  Default valid options are: \code{'SVM'}, \code{'C4.5'}, \code{'C5.0'},
  \code{'RF'}, \code{'NB'} and \code{'KNN'}. To use other base method see
  \href{https://github.com/rivolli/utiml}{online documentation}. (default:
   \code{'SVM'}).}

\item{...}{Others arguments passed to the base method for all subproblems
(recommended only when the same base method is used for all labels).}

\item{specific.params}{A named list to pass parameters for a specific model
(the name of the list define wich model will use the arguments) (default:
\code{list()}).}

\item{save.datasets}{Logical indicating whether the binary datasets must be
saved in the model or not (default: FALSE).}

\item{CORES}{The number of cores to parallelize the training. Values higher
  than 1 require the \pkg{parallel} package (default: 1).}
}
\value{
An object of class \code{BRmodel} containing the set of fitted
  models, including: \describe{ \item{labels}{A vector with the label names}
  \item{models}{A list of models named by the label names. The model type is
  defined by the base method used to train each subproblem} \item{datasets}{A
  list of \code{mldBR} named by the label names. Only when the
  \code{save.datasets = TRUE}.} }
}
\description{
Create a Binary Relevance model for multilabel classification.

  Binary Relevance is a simple and effective transformation method to predict
  multi-label data. This is based on the one-versus-all approach to build a
  specific model for each label.
}
\section{Warning}{

   RWeka package does not permit use \code{'C4.5'} in parallel mode, use
   \code{'C5.0'} or \code{'CART'} instead of it
}
\examples{
# Train and predict emotion multilabel dataset using Binary Relevance
library(utiml)
testdata <- emotions$dataset[sample(1:100, 10), emotions$attributesIndexes]

# Use SVM as base method
model <- br(emotions)
pred <- predict(model, testdata)

# Change the default base method
model <- br(emotions, "C4.5")
pred <- predict(model, testdata)

# Set a parameters for all subproblems
model <- br(emotions, "KNN", k=5)
pred <- predict(model, testdata)

# Use differents base classifers for different labels and running in parallel
methods <- c("SVM", "RF", "CART", "C5.0", "KNN", "RF")
names(methods) <- rownames(emotions$labels)
model <- br(emotions, methods, CORES=6)
pred <- predict(model, testdata, CORES=6)

# Change SVM kernel for label 'happy-pleased'
extra <- list('happy-pleased' = list("kernel" = "linear"))
model <- br(emotions, specific.params=extra)
pred <- predict(model, testdata)
}
\references{
Boutell, M. R., Luo, J., Shen, X., & Brown, C. M. (2004). Learning
   multi-label scene classification. Pattern Recognition, 37(9), 1757â€“1771.
}

