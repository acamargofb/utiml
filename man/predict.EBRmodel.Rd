% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ebr.R
\name{predict.EBRmodel}
\alias{predict.EBRmodel}
\title{Predict Method for Ensemble of Binary Relevance}
\usage{
\method{predict}{EBRmodel}(object, newdata, vote.schema = "MAJ",
  probability = TRUE, ..., CORES = 1)
}
\arguments{
\item{object}{Object of class '\code{EBRmodel}', created by \code{\link{ebr}} method.}

\item{newdata}{An object containing the new input data. This must be a matrix or
data.frame object containing the same size of training data or a mldr object.}

\item{vote.schema}{Define the way that ensemble must compute the predictions.
The valid options are describe in \link{utiml_vote.schema_method}. If the value is
NULL then all predictions will be returned instead of a mlresult. (default: 'MAJ')}

\item{probability}{Logical indicating whether class probabilities should be returned.
(default: \code{TRUE})}

\item{...}{Others arguments passed to the base method prediction for all
subproblems.}

\item{CORES}{The number of cores to parallelize the prediction. Values higher
  than 1 require the \pkg{parallel} package (default: 1).}
}
\value{
A matrix containing the probabilistic values or just predictions (only when
  \code{probability = FALSE}). The rows indicate the predicted object and the
  columns indicate the labels.
}
\description{
This function predicts values based upon a model trained
 by \code{\link{ebr}}.
}
\examples{
# Emotion multi-label dataset using Ensemble of Binary Relevance
dataset <- mldr_random_holdout(emotions, c(train=0.9, test=0.1))

# Predict SVM scores
model <- ebr(dataset$train)
pred <- predict(model, dataset$test)

# Predict SVM bipartitions running in 6 cores
pred <- predict(model, dataset$test, prob = FALSE, CORES = 6)

# Return the classes with the highest score
pred <- predict(model, dataset$test, vote = 'MAX')
}
\seealso{
\code{\link[=ebr]{Ensemble of Binary Relevance (EBR)}}
}

