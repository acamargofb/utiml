% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/method_ns.R
\name{ns}
\alias{ns}
\title{Nested Stacking for multi-label Classification}
\usage{
ns(mdata, base.method = "SVM", chain = c(), ..., predict.params = list())
}
\arguments{
\item{mdata}{Object of class \code{\link[mldr]{mldr}}, a multi-label train
dataset (provided by \pkg{mldr} package).}

\item{base.method}{A string with the name of base method. The same base method
  will be used for train all subproblems.

  Default valid options are: \code{'SVM'}, \code{'C4.5'}, \code{'C5.0'},
  \code{'RF'}, \code{'NB'} and \code{'KNN'}. To use other base method see
  \code{\link{mltrain}} and \code{\link{mlpredict}} instructions. (default:
   \code{'SVM'})}

\item{chain}{A vector with the label names to define the chain order. If
empty the chain is the default label sequence of the dataset. (default:
\code{list()})}

\item{...}{Others arguments passed to the base method for all subproblems.}

\item{predict.params}{A list of default arguments passed to the predict
 method. (default: \code{list()})}
}
\value{
An object of class \code{NSmodel} containing the set of fitted
  models, including:
  \describe{
   \item{chain}{A vector with the chain order}
   \item{labels}{A vector with the label names in expected order}
   \item{labelset}{The matrix containing only labels values}
   \item{models}{A list of models named by the label names.}
  }
}
\description{
Create a Nested Stacking model for multilabel classification.

  Nested Stacking is based on Classifier Chains transformation method to predict
  multi-label data. It differs from CC to predict the labels values in the
  training step and to regularize the output based on the labelsets available
  on training data.
}
\examples{
# Train and predict emotion multilabel dataset using Nested Stacking
dataset <- mldr_random_holdout(emotions, c(train=0.9, test=0.1))

# Use SVM as base method
model <- ns(dataset$train)
pred <- predict(model, dataset$test)

# Use a specific chain with C4.5 classifier
mychain <- sample(rownames(dataset$train$labels))
model <- ns(dataset$train, 'C4.5', mychain)
pred <- predict(model, dataset$test)

# Set a specific parameter
model <- ns(dataset$train, 'KNN', k=5)
pred <- predict(model, dataset$test)
}
\references{
Senge, R., Coz, J. J. del, & Hüllermeier, E. (2013). Rectifying classifier
   chains for multi-label classification. In Workshop of Lernen, Wissen &
   Adaptivität (LWA 2013) (pp. 162–169). Bamberg, Germany.
}
\seealso{
Other Transformation methods: \code{\link{brplus}};
  \code{\link{br}}; \code{\link{cc}}; \code{\link{ctrl}};
  \code{\link{dbr}}; \code{\link{ebr}}; \code{\link{ecc}};
  \code{\link{mbr}}; \code{\link{prudent}};
  \code{\link{rdbr}}
}

